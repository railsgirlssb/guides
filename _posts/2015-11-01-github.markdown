---
layout: default
title: Deine Web App auf GitHub hochladen
permalink: github
---

# Lade deine Web App auf GitHub

## Voraussetzungen

* Prüfe, ob Git installiert ist
  * Tippe hierfür `git --version` in dein Terminal
  * Die Version sollte 1.8 oder neuer sein
* Falls Git nicht installiert ist, lade [Git hier herunter](http://git-scm.com/downloads) und installier es
* Erstelle ein [GitHub](https://github.com) Benutzerkonto oder logge dich ein, wenn du bereits ein Benutzerkonto besitzt
* Konfiguriere Git in deinem Terminal, indem du die folgenden zwei Befehle mit deinem Vor- und Nachnamen und deiner E-Mail Adresse konfigurierst
{% highlight sh %}
git config --global user.name "Vorname Nachname"
git config --global user.email "mail@example.com"
{% endhighlight %}


**COACH:** Sprich ein wenig über Git, Versionskontrollsysteme und Open Source

## Lade deine Web App auf GitHub

Auf deinem GitHub Profil klicke "New repository" und gib dem neuen Repository den Namen `rails-girls`.

Stell zunächst sicher, dass du in deinem Terminal im Projektverzeichnis bist.

Anschließend initialisieren wir Git in unserem Projekt:

{% highlight sh %}
git init
{% endhighlight %}

Anschließend fragen wir den Git Status unseres Projekts ab:

{% highlight sh %}
git status
{% endhighlight %}

Es wird eine Liste von Dateien ausgegeben, die sich in deinem aktuellen Verzeichnis befinden.

Um diese Dateien unter Versionskontrolle zu stellen, müssen wir die Dateien Git kenntlich machen:

{% highlight sh %}
git add .
{% endhighlight %}

Diese Befehl stellt alle Dateien (und Änderungen) unter den sog. Staging Bereich.
Zuletzt fassen wir diese nun im Staging Bereich befindlichen Dateien in einem `Commit` zusammen und hinterlassen die Nachricht `Mein erster Commit`.

{% highlight sh %}
git commit -m "Mein erster Commit"
{% endhighlight %}

Lokal haben wir nun unsere Dateien unter Versionskontrolle gestellt und werden diese Dateien nach GitHub in unser Projekt hochladen.
Hierzu müssen wir folgenden Befehl mit der Git URL für das Projekt eingeben.

{% highlight sh %}
git remote add origin https://github.com/DEIN-BENUTZER/rails-girls.git
{% endhighlight %}

Es wird eine Verbindung zwischen deiner lokalen Kopie des Projekts und der Version auf GitHub erstellt.
Zuletzt laden wir die bisher gemachten Änderungen auf GitHub, indem wir die Git `push` Befehl anwenden.


{% highlight sh %}
git push -u origin master
{% endhighlight %}

Gratulation! Deine Web App ist nun auf GitHub verfügbar.
Du kannst dir dein Projekt unter deiner GitHub Projekt URL anschauen:


{% highlight sh %}
https://github.com/DEIN-BENUTZER/rails-girls
{% endhighlight %}

## Änderungen hochladen

Wenn du weiter an dem Projekt arbeitest, kannst du die Änderungen mit den folgenden Befehlen auf GitHub `push`en.


{% highlight sh %}
git add .
git commit -m "Deine Nachricht zu den gemachten Aenderungen"
git push origin master
{% endhighlight %}


## Was kommt als nächstes?

### Sei Teil der Open Source Bewegung

* Folge den anderen Rails Girls und den Coaches auf GitHub (z.B. [Corinna](https://github.com/corinnawiesner))
* [Stöbere](https://github.com/explore) in interessanten Open Source Projekten

### Lerne mehr über Git

* Probier das interaktive Tutorial unter [trygit.org](http://try.github.io/) aus
* Schau dir das Git Cheat Sheet an, das wir dir mitgeben
